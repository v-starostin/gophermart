openapi: 3.0.3
info:
  title: Project Name
  description: |-
    This is a simple Project
  version: 0.1.0
tags:
  - name: user
    description: ''
paths:
  /api/user/register:
    post:
      tags:
        - user
      summary: Register user
      description: ''
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          headers:
            Authorization:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          headers:
            Authorization:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/user/orders:
    post:
      tags:
        - user
      summary: ''
      operationId: uploadOrder
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: ''
        '202':
          description: Order is created
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - user
      summary: ''
      operationId: getOrders
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '204':
          description: ''
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/user/balance:
    get:
      tags:
        - user
      summary: ''
      operationId: getBalance
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/user/balance/withdraw:
    post:
      tags:
        - user
      summary: ''
      operationId: withdrawRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdraw'
      responses:
        '200':
          description: ''
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '402':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/user/withdrawals:
    get:
      tags:
        - user
      summary: ''
      operationId: getWithdrawals
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Withdraw'
        '204':
          description: ''
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Balance:
      type: object
      required:
        - current
        - withdrawn
      properties:
        current:
          type: number
          format: double
        withdrawn:
          type: number
          format: double
    Order:
      type: object
      properties:
        number:
          type: string
        status:
          type: string
        uploaded_at:
          type: string
          format: date-time
        accrual:
          type: number
          format: double
    Withdraw:
      type: object
      required:
        - order
        - sum
      properties:
        order:
          type: string
        sum:
          type: number
          format: double
        processed_at:
          type: string
          format: date-time
    User:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
          format: password
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message